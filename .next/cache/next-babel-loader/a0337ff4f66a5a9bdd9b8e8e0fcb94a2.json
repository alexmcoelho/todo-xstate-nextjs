{"ast":null,"code":"import { Machine, actions } from \"xstate\";\nvar assign = actions.assign;\nexport var todoMachine = Machine({\n  id: \"todo\",\n  initial: \"reading\",\n  context: {\n    id: undefined,\n    title: \"\",\n    prevTitle: \"\"\n  },\n  on: {\n    TOGGLE_COMPLETE: {\n      target: \".reading.completed\",\n      actions: [assign({\n        completed: true\n      }), \"notifyChanged\"]\n    },\n    DELETE: \"deleted\"\n  },\n  states: {\n    reading: {\n      initial: \"unknown\",\n      states: {\n        unknown: {\n          on: {\n            \"\": [{\n              target: \"completed\",\n              cond: function cond(ctx) {\n                return ctx.completed;\n              }\n            }, {\n              target: \"pending\"\n            }]\n          }\n        },\n        pending: {},\n        completed: {\n          on: {\n            TOGGLE_COMPLETE: {\n              target: \"pending\",\n              actions: [assign({\n                completed: false\n              }), \"notifyChanged\"]\n            }\n          }\n        },\n        hist: {\n          type: \"history\"\n        }\n      },\n      on: {\n        EDIT: {\n          target: \"editing\",\n          actions: \"focusInput\"\n        }\n      }\n    },\n    editing: {\n      onEntry: assign({\n        prevTitle: function prevTitle(ctx) {\n          return ctx.title;\n        }\n      }),\n      on: {\n        CHANGE: {\n          actions: assign({\n            title: function title(ctx, e) {\n              return e.value;\n            }\n          })\n        },\n        COMMIT: [{\n          target: \"reading.hist\",\n          actions: \"notifyChanged\",\n          cond: function cond(ctx) {\n            return ctx.title.trim().length > 0;\n          }\n        }, {\n          target: \"deleted\"\n        }],\n        BLUR: {\n          target: \"reading\",\n          actions: \"notifyChanged\"\n        },\n        CANCEL: {\n          target: \"reading\",\n          actions: assign({\n            title: function title(ctx) {\n              return ctx.prevTitle;\n            }\n          })\n        }\n      }\n    },\n    deleted: {\n      onEntry: \"notifyDeleted\"\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Alex/react-componentes-e-projetos-diversos/todo-xstate-nextjs/components/todoMachine.js"],"names":["Machine","actions","assign","todoMachine","id","initial","context","undefined","title","prevTitle","on","TOGGLE_COMPLETE","target","completed","DELETE","states","reading","unknown","cond","ctx","pending","hist","type","EDIT","editing","onEntry","CHANGE","e","value","COMMIT","trim","length","BLUR","CANCEL","deleted"],"mappings":"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","sourcesContent":["import { Machine, actions } from \"xstate\";\r\nconst { assign } = actions;\r\n\r\nexport const todoMachine = Machine({\r\n  id: \"todo\",\r\n  initial: \"reading\",\r\n  context: {\r\n    id: undefined,\r\n    title: \"\",\r\n    prevTitle: \"\"\r\n  },\r\n  on: {\r\n    TOGGLE_COMPLETE: {\r\n      target: \".reading.completed\",\r\n      actions: [assign({ completed: true }), \"notifyChanged\"]\r\n    },\r\n    DELETE: \"deleted\"\r\n  },\r\n  states: {\r\n    reading: {\r\n      initial: \"unknown\",\r\n      states: {\r\n        unknown: {\r\n          on: {\r\n            \"\": [\r\n              { target: \"completed\", cond: ctx => ctx.completed },\r\n              { target: \"pending\" }\r\n            ]\r\n          }\r\n        },\r\n        pending: {},\r\n        completed: {\r\n          on: {\r\n            TOGGLE_COMPLETE: {\r\n              target: \"pending\",\r\n              actions: [assign({ completed: false }), \"notifyChanged\"]\r\n            }\r\n          }\r\n        },\r\n        hist: {\r\n          type: \"history\"\r\n        }\r\n      },\r\n      on: {\r\n        EDIT: {\r\n          target: \"editing\",\r\n          actions: \"focusInput\"\r\n        }\r\n      }\r\n    },\r\n    editing: {\r\n      onEntry: assign({ prevTitle: ctx => ctx.title }),\r\n      on: {\r\n        CHANGE: {\r\n          actions: assign({\r\n            title: (ctx, e) => e.value\r\n          })\r\n        },\r\n        COMMIT: [\r\n          {\r\n            target: \"reading.hist\",\r\n            actions: \"notifyChanged\",\r\n            cond: ctx => ctx.title.trim().length > 0\r\n          },\r\n          { target: \"deleted\" }\r\n        ],\r\n        BLUR: {\r\n          target: \"reading\",\r\n          actions: \"notifyChanged\"\r\n        },\r\n        CANCEL: {\r\n          target: \"reading\",\r\n          actions: assign({ title: ctx => ctx.prevTitle })\r\n        }\r\n      }\r\n    },\r\n    deleted: {\r\n      onEntry: \"notifyDeleted\"\r\n    }\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
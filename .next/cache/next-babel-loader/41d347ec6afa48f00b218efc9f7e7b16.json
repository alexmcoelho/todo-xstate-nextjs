{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\react-componentes-e-projetos-diversos\\\\todo-xstate-nextjs\\\\components\\\\Todos.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport cn from \"classnames\"; //import \"todomvc-app-css/index.css\";\n\nimport { useMachine } from \"@xstate/react\";\nimport { useHashChange } from \"./useHashChange\";\nimport { Todo } from \"./Todo\";\nimport { todosMachine } from \"./todosMachine\";\n\nfunction filterTodos(state, todos) {\n  if (state.matches(\"active\")) {\n    return todos.filter(todo => !todo.completed);\n  }\n\n  if (state.matches(\"completed\")) {\n    return todos.filter(todo => todo.completed);\n  }\n\n  return todos;\n}\n\nconst persistedTodosMachine = todosMachine.withConfig({\n  actions: {\n    persist: ctx => {\n      localStorage.setItem(\"todos-xstate\", JSON.stringify(ctx.todos));\n    }\n  }\n}, // initial state from localstorage\n{\n  todo: \"Learn state machines\",\n  todos: (() => {\n    try {\n      return JSON.parse(localStorage.getItem(\"todos-xstate\")) || [];\n    } catch (e) {\n      return [];\n    }\n  })()\n});\nexport default function Todos() {\n  const [state, send] = useMachine(persistedTodosMachine);\n  useHashChange(() => {\n    send(`SHOW.${window.location.hash.slice(2) || \"all\"}`);\n  }); // Capture initial state of browser hash\n\n  useEffect(() => {\n    window.location.hash.slice(2) && send(`SHOW.${window.location.hash.slice(2)}`);\n  });\n  const {\n    todos,\n    todo\n  } = state.context;\n  const numActiveTodos = todos.filter(todo => !todo.completed).length;\n  const allCompleted = todos.length > 0 && numActiveTodos === 0;\n  const mark = !allCompleted ? \"completed\" : \"active\";\n  const markEvent = `MARK.${mark}`;\n  const filteredTodos = filterTodos(state, todos);\n  return __jsx(\"section\", {\n    className: \"todoapp\",\n    \"data-state\": state.toStrings(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"todos\"), __jsx(\"input\", {\n    className: \"new-todo\",\n    placeholder: \"What needs to be done?\",\n    autoFocus: true,\n    onKeyPress: e => {\n      if (e.key === \"Enter\") {\n        send(\"NEWTODO.COMMIT\", {\n          value: e.target.value\n        });\n      }\n    },\n    onChange: e => send(\"NEWTODO.CHANGE\", {\n      value: e.target.value\n    }),\n    value: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), __jsx(\"section\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    id: \"toggle-all\",\n    className: \"toggle-all\",\n    type: \"checkbox\",\n    checked: allCompleted,\n    onChange: () => {\n      send(markEvent);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"toggle-all\",\n    title: `Mark all as ${mark}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Mark all as \", mark), __jsx(\"ul\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), !!todos.length && __jsx(\"footer\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"todo-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, numActiveTodos), \" item\", numActiveTodos === 1 ? \"\" : \"s\", \" left\"), __jsx(\"ul\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: cn({\n      selected: state.matches(\"all\")\n    }),\n    href: \"#/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"All\")), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: cn({\n      selected: state.matches(\"active\")\n    }),\n    href: \"#/active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Active\")), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: cn({\n      selected: state.matches(\"completed\")\n    }),\n    href: \"#/completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Completed\"))), numActiveTodos < todos.length && __jsx(\"button\", {\n    onClick: _ => send(\"CLEAR_COMPLETED\"),\n    className: \"clear-completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Clear completed\")));\n}","map":{"version":3,"sources":["C:/Users/Alex/react-componentes-e-projetos-diversos/todo-xstate-nextjs/components/Todos.jsx"],"names":["React","useEffect","cn","useMachine","useHashChange","Todo","todosMachine","filterTodos","state","todos","matches","filter","todo","completed","persistedTodosMachine","withConfig","actions","persist","ctx","localStorage","setItem","JSON","stringify","parse","getItem","e","Todos","send","window","location","hash","slice","context","numActiveTodos","length","allCompleted","mark","markEvent","filteredTodos","toStrings","key","value","target","selected","_"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport cn from \"classnames\";\n//import \"todomvc-app-css/index.css\";\nimport { useMachine } from \"@xstate/react\";\nimport { useHashChange } from \"./useHashChange\";\nimport { Todo } from \"./Todo\";\nimport { todosMachine } from \"./todosMachine\";\n\nfunction filterTodos(state, todos) {\n  if (state.matches(\"active\")) {\n    return todos.filter(todo => !todo.completed);\n  }\n\n  if (state.matches(\"completed\")) {\n    return todos.filter(todo => todo.completed);\n  }\n\n  return todos;\n}\n\nconst persistedTodosMachine = todosMachine.withConfig(\n  {\n    actions: {\n      persist: ctx => {\n        localStorage.setItem(\"todos-xstate\", JSON.stringify(ctx.todos));\n      }\n    }\n  },\n  // initial state from localstorage\n  {\n    todo: \"Learn state machines\",\n    todos: (() => {\n      try {\n        return JSON.parse(localStorage.getItem(\"todos-xstate\")) || [];\n      } catch (e) {\n        return [];\n      }\n    })()\n  }\n);\n\nexport default function Todos() {\n  const [state, send] = useMachine(persistedTodosMachine);\n\n  useHashChange(() => {\n    send(`SHOW.${window.location.hash.slice(2) || \"all\"}`);\n  });\n\n  // Capture initial state of browser hash\n  useEffect(() => {\n    window.location.hash.slice(2) &&\n      send(`SHOW.${window.location.hash.slice(2)}`);\n  });\n\n  const { todos, todo } = state.context;\n\n  const numActiveTodos = todos.filter(todo => !todo.completed).length;\n  const allCompleted = todos.length > 0 && numActiveTodos === 0;\n  const mark = !allCompleted ? \"completed\" : \"active\";\n  const markEvent = `MARK.${mark}`;\n  const filteredTodos = filterTodos(state, todos);\n\n  return (\n    <section className=\"todoapp\" data-state={state.toStrings()}>\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          autoFocus\n          onKeyPress={e => {\n            if (e.key === \"Enter\") {\n              send(\"NEWTODO.COMMIT\", { value: e.target.value });\n            }\n          }}\n          onChange={e => send(\"NEWTODO.CHANGE\", { value: e.target.value })}\n          value={todo}\n        />\n      </header>\n      <section className=\"main\">\n        <input\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          type=\"checkbox\"\n          checked={allCompleted}\n          onChange={() => {\n            send(markEvent);\n          }}\n        />\n        <label htmlFor=\"toggle-all\" title={`Mark all as ${mark}`}>\n          Mark all as {mark}\n        </label>\n        <ul className=\"todo-list\">\n\n        </ul>\n      </section>\n      {!!todos.length && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            <strong>{numActiveTodos}</strong> item\n            {numActiveTodos === 1 ? \"\" : \"s\"} left\n          </span>\n          <ul className=\"filters\">\n            <li>\n              <a\n                className={cn({\n                  selected: state.matches(\"all\")\n                })}\n                href=\"#/\"\n              >\n                All\n              </a>\n            </li>\n            <li>\n              <a\n                className={cn({\n                  selected: state.matches(\"active\")\n                })}\n                href=\"#/active\"\n              >\n                Active\n              </a>\n            </li>\n            <li>\n              <a\n                className={cn({\n                  selected: state.matches(\"completed\")\n                })}\n                href=\"#/completed\"\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n          {numActiveTodos < todos.length && (\n            <button\n              onClick={_ => send(\"CLEAR_COMPLETED\")}\n              className=\"clear-completed\"\n            >\n              Clear completed\n            </button>\n          )}\n        </footer>\n      )}\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
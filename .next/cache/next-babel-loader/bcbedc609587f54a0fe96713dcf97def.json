{"ast":null,"code":"import { Machine, actions, sendParent } from \"xstate\";\nvar assign = actions.assign;\nexport var todoMachine = Machine({\n  id: \"todo\",\n  initial: \"reading\",\n  context: {\n    id: undefined,\n    title: \"\",\n    prevTitle: \"\"\n  },\n  on: {\n    TOGGLE_COMPLETE: {\n      target: \".reading.completed\",\n      actions: [assign({\n        completed: true\n      }), sendParent(function (ctx) {\n        return console.log('commit'), {\n          type: \"TODO.COMMIT\",\n          todo: ctx\n        };\n      })]\n    },\n    DELETE: \"deleted\"\n  },\n  states: {\n    reading: {\n      initial: \"unknown\",\n      states: {\n        unknown: {\n          on: {\n            \"\": [{\n              target: \"completed\",\n              cond: function cond(ctx) {\n                return ctx.completed;\n              }\n            }, {\n              target: \"pending\"\n            }]\n          }\n        },\n        pending: {\n          on: {\n            SET_COMPLETED: {\n              target: \"completed\",\n              actions: [assign({\n                completed: true\n              }), sendParent(function (ctx) {\n                return {\n                  type: \"TODO.COMMIT\",\n                  todo: ctx\n                };\n              })]\n            }\n          }\n        },\n        completed: {\n          on: {\n            TOGGLE_COMPLETE: {\n              target: \"pending\",\n              actions: [assign({\n                completed: false\n              }), sendParent(function (ctx) {\n                return {\n                  type: \"TODO.COMMIT\",\n                  todo: ctx\n                };\n              })]\n            },\n            SET_ACTIVE: {\n              target: \"pending\",\n              actions: [assign({\n                completed: false\n              }), sendParent(function (ctx) {\n                return {\n                  type: \"TODO.COMMIT\",\n                  todo: ctx\n                };\n              })]\n            }\n          }\n        },\n        hist: {\n          type: \"history\"\n        }\n      },\n      on: {\n        EDIT: {\n          target: \"editing\",\n          actions: \"focusInput\"\n        }\n      }\n    },\n    editing: {\n      onEntry: assign({\n        prevTitle: function prevTitle(ctx) {\n          return ctx.title;\n        }\n      }),\n      on: {\n        CHANGE: {\n          actions: assign({\n            title: function title(ctx, e) {\n              return e.value;\n            }\n          })\n        },\n        COMMIT: [{\n          target: \"reading.hist\",\n          actions: sendParent(function (ctx) {\n            return {\n              type: \"TODO.COMMIT\",\n              todo: ctx\n            };\n          }),\n          cond: function cond(ctx) {\n            return ctx.title.trim().length > 0;\n          }\n        }, {\n          target: \"deleted\"\n        }],\n        BLUR: {\n          target: \"reading\",\n          actions: sendParent(function (ctx) {\n            return {\n              type: \"TODO.COMMIT\",\n              todo: ctx\n            };\n          })\n        },\n        CANCEL: {\n          target: \"reading\",\n          actions: assign({\n            title: function title(ctx) {\n              return ctx.prevTitle;\n            }\n          })\n        }\n      }\n    },\n    deleted: {\n      onEntry: sendParent(function (ctx) {\n        return {\n          type: \"TODO.DELETE\",\n          id: ctx.id\n        };\n      })\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Alex/react-componentes-e-projetos-diversos/todo-xstate-nextjs/machines/todoMachine.js"],"names":["Machine","actions","sendParent","assign","todoMachine","id","initial","context","undefined","title","prevTitle","on","TOGGLE_COMPLETE","target","completed","ctx","console","log","type","todo","DELETE","states","reading","unknown","cond","pending","SET_COMPLETED","SET_ACTIVE","hist","EDIT","editing","onEntry","CHANGE","e","value","COMMIT","trim","length","BLUR","CANCEL","deleted"],"mappings":"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","sourcesContent":["import { Machine, actions, sendParent } from \"xstate\";\nconst { assign } = actions;\n\nexport const todoMachine = Machine({\n\tid: \"todo\",\n\tinitial: \"reading\",\n\tcontext: {\n\t\tid: undefined,\n\t\ttitle: \"\",\n\t\tprevTitle: \"\"\n\t},\n\ton: {\n\t\tTOGGLE_COMPLETE: {\n\t\t\ttarget: \".reading.completed\",\n\t\t\tactions: [\n\t\t\t\tassign({ completed: true }),\n\t\t\t\tsendParent(ctx => (console.log('commit'), { type: \"TODO.COMMIT\", todo: ctx }))\n\t\t\t]\n\t\t},\n\t\tDELETE: \"deleted\"\n\t},\n\tstates: {\n\t\treading: {\n\t\t\tinitial: \"unknown\",\n\t\t\tstates: {\n\t\t\t\tunknown: {\n\t\t\t\t\ton: {\n\t\t\t\t\t\t\"\": [\n\t\t\t\t\t\t\t{ target: \"completed\", cond: ctx => ctx.completed },\n\t\t\t\t\t\t\t{ target: \"pending\" }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpending: {\n\t\t\t\t\ton: {\n\t\t\t\t\t\tSET_COMPLETED: {\n\t\t\t\t\t\t\ttarget: \"completed\",\n\t\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t\tassign({ completed: true }),\n\t\t\t\t\t\t\t\tsendParent(ctx => ({ type: \"TODO.COMMIT\", todo: ctx }))\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcompleted: {\n\t\t\t\t\ton: {\n\t\t\t\t\t\tTOGGLE_COMPLETE: {\n\t\t\t\t\t\t\ttarget: \"pending\",\n\t\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t\tassign({ completed: false }),\n\t\t\t\t\t\t\t\tsendParent(ctx => ({ type: \"TODO.COMMIT\", todo: ctx }))\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tSET_ACTIVE: {\n\t\t\t\t\t\t\ttarget: \"pending\",\n\t\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t\tassign({ completed: false }),\n\t\t\t\t\t\t\t\tsendParent(ctx => ({ type: \"TODO.COMMIT\", todo: ctx }))\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thist: {\n\t\t\t\t\ttype: \"history\"\n\t\t\t\t}\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tEDIT: {\n\t\t\t\t\ttarget: \"editing\",\n\t\t\t\t\tactions: \"focusInput\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tediting: {\n\t\t\tonEntry: assign({ prevTitle: ctx => ctx.title }),\n\t\t\ton: {\n\t\t\t\tCHANGE: {\n\t\t\t\t\tactions: assign({\n\t\t\t\t\t\ttitle: (ctx, e) => e.value\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tCOMMIT: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttarget: \"reading.hist\",\n\t\t\t\t\t\tactions: sendParent(ctx => ({ type: \"TODO.COMMIT\", todo: ctx })),\n\t\t\t\t\t\tcond: ctx => ctx.title.trim().length > 0\n\t\t\t\t\t},\n\t\t\t\t\t{ target: \"deleted\" }\n\t\t\t\t],\n\t\t\t\tBLUR: {\n\t\t\t\t\ttarget: \"reading\",\n\t\t\t\t\tactions: sendParent(ctx => ({ type: \"TODO.COMMIT\", todo: ctx }))\n\t\t\t\t},\n\t\t\t\tCANCEL: {\n\t\t\t\t\ttarget: \"reading\",\n\t\t\t\t\tactions: assign({ title: ctx => ctx.prevTitle })\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdeleted: {\n\t\t\tonEntry: sendParent(ctx => ({ type: \"TODO.DELETE\", id: ctx.id }))\n\t\t}\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}
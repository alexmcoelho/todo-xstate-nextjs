{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\react-componentes-e-projetos-diversos\\\\todo-xstate-nextjs\\\\components\\\\Todos.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport cn from \"classnames\"; //import \"todomvc-app-css/index.css\";\n\nimport { useMachine } from \"@xstate/react\";\nimport { useHashChange } from \"../utils/useHashChange\";\nimport { Todo } from \"./Todo\";\nimport { todosMachine } from \"../machines/todosMachine\";\n\nfunction filterTodos(state, todos) {\n  if (state.matches(\"active\")) {\n    return todos.filter(todo => !todo.completed);\n  }\n\n  if (state.matches(\"completed\")) {\n    return todos.filter(todo => todo.completed);\n  }\n\n  return todos;\n}\n\nconst persistedTodosMachine = todosMachine.withConfig({\n  actions: {\n    persist: ctx => {\n      localStorage.setItem(\"todos-xstate\", JSON.stringify(ctx.todos));\n    }\n  }\n}, // initial state from localstorage\n{\n  todo: \"Aprenda mÃ¡quinas de estado\",\n  todos: (() => {\n    try {\n      return JSON.parse(localStorage.getItem(\"todos-xstate\")) || [];\n    } catch (e) {\n      return [];\n    }\n  })()\n});\nexport default function Todos() {\n  const [state, send] = useMachine(persistedTodosMachine);\n  const {\n    0: contend,\n    1: setContent\n  } = useState(null);\n  useHashChange(() => {\n    send(`SHOW.${window.location.hash.slice(2) || \"all\"}`);\n  }); // Capture initial state of browser hash\n\n  useEffect(() => {\n    window.location.hash.slice(2) && send(`SHOW.${window.location.hash.slice(2)}`);\n  });\n  useEffect(() => {\n    setContent(__jsx(\"section\", {\n      className: \"todoapp\",\n      \"data-state\": state.toStrings(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, __jsx(\"header\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"todos\"), __jsx(\"input\", {\n      className: \"new-todo\",\n      placeholder: \"What needs to be done?\",\n      autoFocus: true,\n      onKeyPress: e => {\n        if (e.key === \"Enter\") {\n          send(\"NEWTODO.COMMIT\", {\n            value: e.target.value\n          });\n        }\n      },\n      onChange: e => send(\"NEWTODO.CHANGE\", {\n        value: e.target.value\n      }),\n      value: todo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })), __jsx(\"section\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      id: \"toggle-all\",\n      className: \"toggle-all\",\n      type: \"checkbox\",\n      checked: allCompleted,\n      onChange: () => {\n        send(markEvent);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"toggle-all\",\n      title: `Mark all as ${mark}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Mark all as \", mark), __jsx(\"ul\", {\n      className: \"todo-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, filteredTodos.map(todo => todo ? __jsx(Todo, {\n      key: todo.id,\n      todoRef: todo.ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 22\n      }\n    }) : null))), !!todos.length && __jsx(\"footer\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: \"todo-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, numActiveTodos), numActiveTodos === 1 ? \"item restante\" : \"itens restantes\"), __jsx(\"ul\", {\n      className: \"filters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: cn({\n        selected: state.matches(\"all\")\n      }),\n      href: \"#/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Todos\")), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: cn({\n        selected: state.matches(\"active\")\n      }),\n      href: \"#/active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Ativos\")), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: cn({\n        selected: state.matches(\"completed\")\n      }),\n      href: \"#/completed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"Conclu\\xEDdos\"))), numActiveTodos < todos.length && __jsx(\"button\", {\n      onClick: _ => send(\"CLEAR_COMPLETED\"),\n      className: \"clear-completed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"Limpa conclu\\xEDdos\"))));\n  }, [state]);\n  const {\n    todos,\n    todo\n  } = state.context;\n  const numActiveTodos = todos.filter(todo => !todo.completed).length;\n  const allCompleted = todos.length > 0 && numActiveTodos === 0;\n  const mark = !allCompleted ? \"completed\" : \"active\";\n  const markEvent = `MARK.${mark}`;\n  const filteredTodos = filterTodos(state, todos);\n  return contend;\n}","map":{"version":3,"sources":["C:/Users/Alex/react-componentes-e-projetos-diversos/todo-xstate-nextjs/components/Todos.jsx"],"names":["React","useEffect","useState","cn","useMachine","useHashChange","Todo","todosMachine","filterTodos","state","todos","matches","filter","todo","completed","persistedTodosMachine","withConfig","actions","persist","ctx","localStorage","setItem","JSON","stringify","parse","getItem","e","Todos","send","contend","setContent","window","location","hash","slice","toStrings","key","value","target","allCompleted","markEvent","mark","filteredTodos","map","id","ref","length","numActiveTodos","selected","_","context"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport cn from \"classnames\";\n//import \"todomvc-app-css/index.css\";\nimport { useMachine } from \"@xstate/react\";\nimport { useHashChange } from \"../utils/useHashChange\";\nimport { Todo } from \"./Todo\";\nimport { todosMachine } from \"../machines/todosMachine\";\n\nfunction filterTodos(state, todos) {\n  if (state.matches(\"active\")) {\n    return todos.filter(todo => !todo.completed);\n  }\n\n  if (state.matches(\"completed\")) {\n    return todos.filter(todo => todo.completed);\n  }\n\n  return todos;\n}\n\nconst persistedTodosMachine = todosMachine.withConfig(\n  {\n    actions: {\n      persist: ctx => {\n        localStorage.setItem(\"todos-xstate\", JSON.stringify(ctx.todos));\n      }\n    }\n  },\n  // initial state from localstorage\n  {\n    todo: \"Aprenda mÃ¡quinas de estado\",\n    todos: (() => {\n      try {\n        return JSON.parse(localStorage.getItem(\"todos-xstate\")) || [];\n      } catch (e) {\n        return [];\n      }\n    })()\n  }\n);\n\nexport default function Todos() {\n  const [state, send] = useMachine(persistedTodosMachine);\n  const [contend, setContent] = useState(null);\n\n  useHashChange(() => {\n    send(`SHOW.${window.location.hash.slice(2) || \"all\"}`);\n  });\n\n  // Capture initial state of browser hash\n  useEffect(() => {\n    window.location.hash.slice(2) &&\n      send(`SHOW.${window.location.hash.slice(2)}`);\n  });\n\n  useEffect(() => {\n    setContent(\n      <section className=\"todoapp\" data-state={state.toStrings()}>\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            autoFocus\n            onKeyPress={e => {\n              if (e.key === \"Enter\") {\n                send(\"NEWTODO.COMMIT\", { value: e.target.value });\n              }\n            }}\n            onChange={e => send(\"NEWTODO.CHANGE\", { value: e.target.value })}\n            value={todo}\n          />\n        </header>\n        <section className=\"main\">\n          <input\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={allCompleted}\n            onChange={() => {\n              send(markEvent);\n            }}\n          />\n          <label htmlFor=\"toggle-all\" title={`Mark all as ${mark}`}>\n            Mark all as {mark}\n          </label>\n          <ul className=\"todo-list\">\n            {filteredTodos.map(todo => (\n              todo ? <Todo key={todo.id} todoRef={todo.ref} /> : null\n            ))}\n          </ul>\n        </section>\n        {!!todos.length && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              <strong>{numActiveTodos}</strong>\n              {numActiveTodos === 1 ? \"item restante\" : \"itens restantes\"}\n            </span>\n            <ul className=\"filters\">\n              <li>\n                <a\n                  className={cn({\n                    selected: state.matches(\"all\")\n                  })}\n                  href=\"#/\"\n                >\n                  Todos\n              </a>\n              </li>\n              <li>\n                <a\n                  className={cn({\n                    selected: state.matches(\"active\")\n                  })}\n                  href=\"#/active\"\n                >\n                  Ativos\n              </a>\n              </li>\n              <li>\n                <a\n                  className={cn({\n                    selected: state.matches(\"completed\")\n                  })}\n                  href=\"#/completed\"\n                >\n                  ConcluÃ­dos\n              </a>\n              </li>\n            </ul>\n            {numActiveTodos < todos.length && (\n              <button\n                onClick={_ => send(\"CLEAR_COMPLETED\")}\n                className=\"clear-completed\"\n              >\n                Limpa concluÃ­dos\n              </button>\n            )}\n          </footer>\n        )}\n      </section>\n    )\n  }, [state])\n\n  const { todos, todo } = state.context;\n\n  const numActiveTodos = todos.filter(todo => !todo.completed).length;\n  const allCompleted = todos.length > 0 && numActiveTodos === 0;\n  const mark = !allCompleted ? \"completed\" : \"active\";\n  const markEvent = `MARK.${mark}`;\n  const filteredTodos = filterTodos(state, todos);\n\n  return (\n    contend\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
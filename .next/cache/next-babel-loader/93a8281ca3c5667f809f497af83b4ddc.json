{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\react-componentes-e-projetos-diversos\\\\todo-xstate-nextjs\\\\components\\\\Todo.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from \"react\";\nimport { useService } from \"@xstate/react\";\nimport cn from \"classnames\";\nexport function Todo(_ref) {\n  _s();\n\n  var todoRef = _ref.todoRef;\n\n  var _useService = useService(todoRef),\n      _useService2 = _slicedToArray(_useService, 2),\n      state = _useService2[0],\n      send = _useService2[1];\n\n  var inputRef = useRef(null);\n  var _state$context = state.context,\n      id = _state$context.id,\n      title = _state$context.title,\n      completed = _state$context.completed;\n  useEffect(function () {\n    todoRef.execute(state, {\n      focusInput: function focusInput() {\n        inputRef.current && inputRef.current.select();\n      }\n    });\n  }, [state, todoRef]);\n  return __jsx(React.Fragment, null, __jsx(\"li\", {\n    className: cn({\n      editing: state.matches(\"editing\"),\n      completed: completed\n    }),\n    \"data-todo-state\": completed ? \"completed\" : \"active\",\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: \"view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    className: \"toggle\",\n    type: \"checkbox\",\n    onChange: function onChange(_) {\n      send(\"TOGGLE_COMPLETE\");\n    },\n    value: completed,\n    checked: completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }\n  }), __jsx(\"label\", {\n    onDoubleClick: function onDoubleClick(e) {\n      send(\"EDIT\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, title), \" \", __jsx(\"button\", {\n    className: \"destroy\",\n    onClick: function onClick() {\n      return send(\"DELETE\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  })), __jsx(\"input\", {\n    className: \"edit\",\n    value: title,\n    onBlur: function onBlur(_) {\n      return send(\"BLUR\");\n    },\n    onChange: function onChange(e) {\n      return send(\"CHANGE\", {\n        value: e.target.value\n      });\n    },\n    onKeyPress: function onKeyPress(e) {\n      if (e.key === \"Enter\") {\n        send(\"COMMIT\");\n      }\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (e.key === \"Escape\") {\n        send(\"CANCEL\");\n      }\n    },\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  })));\n}\n\n_s(Todo, \"rWS+r7L12wD3kUPQcVnl6AY9SZk=\", false, function () {\n  return [useService];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/Alex/react-componentes-e-projetos-diversos/todo-xstate-nextjs/components/Todo.jsx"],"names":["React","useEffect","useRef","useService","cn","Todo","todoRef","state","send","inputRef","context","id","title","completed","execute","focusInput","current","select","editing","matches","_","e","value","target","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useService } from \"@xstate/react\";\nimport cn from \"classnames\";\n\nexport function Todo({ todoRef }) {\n\tconst [state, send] = useService(todoRef);\n\tconst inputRef = useRef(null);\n\tconst { id, title, completed } = state.context;\n\n\tuseEffect(() => {\n\t\ttodoRef.execute(state, {\n\t\t\tfocusInput() {\n\t\t\t\tinputRef.current && inputRef.current.select();\n\t\t\t}\n\t\t});\n\t}, [state, todoRef]);\n\n\treturn (\n\t\t<>\n\t\t\t<li\n\t\t\t\tclassName={cn({\n\t\t\t\t\tediting: state.matches(\"editing\"),\n\t\t\t\t\tcompleted\n\t\t\t\t})}\n\t\t\t\tdata-todo-state={completed ? \"completed\" : \"active\"}\n\t\t\t\tkey={id}\n\t\t\t>\n\t\t\t\t<div className=\"view\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"toggle\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tonChange={_ => {\n\t\t\t\t\t\t\tsend(\"TOGGLE_COMPLETE\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={completed}\n\t\t\t\t\t\tchecked={completed}\n\t\t\t\t\t/>\n\t\t\t\t\t<label\n\t\t\t\t\t\tonDoubleClick={e => {\n\t\t\t\t\t\t\tsend(\"EDIT\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</label>{\" \"}\n\t\t\t\t\t<button className=\"destroy\" onClick={() => send(\"DELETE\")} />\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"edit\"\n\t\t\t\t\tvalue={title}\n\t\t\t\t\tonBlur={_ => send(\"BLUR\")}\n\t\t\t\t\tonChange={e => send(\"CHANGE\", { value: e.target.value })}\n\t\t\t\t\tonKeyPress={e => {\n\t\t\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\t\t\tsend(\"COMMIT\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyDown={e => {\n\t\t\t\t\t\tif (e.key === \"Escape\") {\n\t\t\t\t\t\t\tsend(\"CANCEL\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tref={inputRef}\n\t\t\t\t/>\n\t\t\t</li>\n\t\t</>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}